Welcome to the com.castsoftware.uc.violationextraction wiki!
>Warning: The Extension described in this document is delivered as-is. This Extension is made available by CAST User Community and governed by Open Source License. Please consider all necessary steps to validate and to test the Extension in your environment before using it in production.        

The extension is published under GNU LGPL v3 open source license

# Table of content
- [Introduction](#introduction)
- [In what situation should you install this extension?](#situation)
- [CAST AIP versions compatibility](#aipcompatibility)
- [Supported DBMS servers](#supporteddbms)
- [Configuration instructions](#configuration)
- [Operation instructions](#Operation)
   - [Source preparation and analysis configuration instructions](#preparation)
   - [Analysis processing](#analysis)
   - [Checks to be performed upon analysis](#checks)
- [What results can you expect?](#expect)
   - [List of custom objects](#objects)
   - [List of links between custom objects](#links)
   - [Sample graphical view in Enlighten](#graphical)
   - [List of quality rules](#rules)
- [Known issues](#KnownIssues)
- [Limitations and potential enhancements](#limitations)
- [Release Notes](#rn)

<a name="introduction"></a>
# Introduction 
This extension allow export the violations for CAST Engineering Dashboard REST API into a CSV file report. Several filters are possible.  
It allows also to create if required action plan items from the above created filter, or violations exclusions 

<a name="situation"></a>
# In what situation should you install this extension?
When you want to generate an CSV report containing the list of quality rules violations for the CAST AIP plateform  
When you want to create automated action plan based on several technical criteria (quality rule name, object fullname, violations status, ...)
When you want to create automated exclusions based on several technical criteria (quality rule name, object fullname, violations status, ...)      

<a name="aipcompatibility"></a>
# CAST AIP versions compatibility

This extension is compatible with all AIP versions 8.3.x  
<a name="supporteddbms"></a>
# Supported DBMS servers
N/A

<a name="configuration"></a>
# Configuration instructions
You need to configure either the batch file provided, or the command line running the python script.
You need to provide the CAST Engineering Dashboard URL and credentials.
<a name="operation"></a>
# Operation instructions
Requires a Python runtime 3.4 (the one installed in CAST AIP binaries in C:\Program Files\CAST\8.3\ThirdParty\Python34 can be used)
Configure the filters if you don't want to see all the application violations, or want a better performance.
Run the batch file or the command line running the python script

<a name="expect"></a>
# What results can you expect?
For each application, and only for the last snapshot : 
(option) 1 CSV file containing the list of violations corresponding to the filters configured   
(option) if the option is selected, the violations can be added in the action  
(option) if the option is selected, the violations can be excluded   

Data extracted :  
- Application name (Simple/Intermediate/Full)  
- Index of the violation number filtered (Simple/Intermediate/Full)  
- Index of the violation number extracted from the Rest API (Simple/Intermediate/Full)  
- Total number of of the violations extracted from the Rest API (Simple/Intermediate/Full)  
- Total number of of the violations in the application (Simple/Intermediate/Full)  
- Total number of of the critical violations in the application (Simple/Intermediate/Full)  
- Quality rule id (Simple/Intermediate/Full)  
- Quality rule name (Simple/Intermediate/Full)  
- Quality rule is critical (Simple/Intermediate/Full)  
- Quality rule maximum weight, contribution weight to technical criteria (Simple/Intermediate/Full) 
- Quality rule compounded weight, cumulated weight contribution to TQI (Simple/Intermediate/Full) 
- Quality rule compounded weight formula, contribution to TQI (Simple/Intermediate/Full)  
- Component type (Full)  
- Component location aka full name (Simple/Intermediate/Full)  
- Violation status (Simple/Intermediate/Full)  
- Component status (Simple/Intermediate/Full)  
- Associated value label (Full)  
- Associated value (Full)  
- List of technical criteria id/name contribution (Simple/Intermediate/Full)  
- List of business criteria id/name contribution (Simple/Intermediate/Full)  
- List of quality standards (Full)  
- PRI for selected business criterion (Simple/Intermediate/Full), if the -businesscriterionfilter parameter is defined with the id of one business criterion  
- PRI Security, Efficiency, Robustness, Transferability, Changeability (Full)  
- Number and list (name + TRI) of transactions for which the component is contributing to (Full)  
- Number and list (name + TRI) of transactions for which the component is contributing to, for Security, Efficiency, Robustness, Transferability, Changeability (Full)  
- Component number of critical violations, cyclomatic complexity, LOC, number of comments lines, Ratio comment/code lines (Full)  
- Action plan tag (priority), status & comment, if any for this violation (Simple/Intermediate/Full)  
- Exclusion request & comment, if any exclusion request has been done for this violation (Simple/Intermediate/Full)  
- Quality rule parameters name & values, if any (Full)  
- Bookmarks begin line & end line numbers (Full)  
- Violation direct URL in the Engineering dashboard (Simple/Intermediate/Full)  
- Quality rule rest API URI (Simple/Intermediate/Full)  
- Component rest API URI (Simple/Intermediate/Full)  
- Violations findings rest API URI (Simple/Intermediate/Full)  
- Violations findings rest API URI (Simple/Intermediate/Full)  
- Violation "id", combination of  Quality rule rest API URI + Component rest API URI, to allow identifying a list of violations to be either added in the action plan or in an exclusion request (Simple/Intermediate/Full)  
- Source code sniplet (Simple/Intermediate/Full), only of the -displaysource parameter is true. First 5000 characters for each code sniplet displayed in the dashboard for this violation  

Violations parameter filters available :   
- Report detail level : -detaillevel Simple/Intermediate/Full (has a high impact on performance)  
- Application name (regexp) : -applicationfilter, if Empty all the application that are configured in the different engineering domains will be processed  
- Generated a CSV file ? -csvfile true/false, default = false  
- Is critical violation ? -criticalrulesonlyfilter= true/false, default "Empty" (All) => has a high impact on performance  
- Quality rule id (regexp) : -qridfilter  
- Quality rule name (regexp) : -qrnamefilter  
- Component location/fulname (regexp) : -componentnamelocationfilter  
- In an action plan ? -actionplanfilter = true/false, default false  
- Has exclusion request ? -exclusionrequestfilter= true/false, default false  
- Violation status : -violationstatusfilter = added/unchanged, default "Empty" (All)  
- Component status : -componentstatusfilter = added/unchanged/updated, default "Empty" (All)  
- PRI minimum value : -priminvaluefilter (PRI int value), requires -businesscriterionfilter to bet set only with one business criterion value  
- Business criterion : -businesscriterionfilter (60017,60016,60013,60014,60011,60012), can be a multiple value, separated with comma, default "Empty" (All)  
- Technology : -technofilter List of technologies separated by a comma, default "Empty" (All)  
- Components : -componentsfilter List of components URI, default "Empty" (All)  
- Violations : -violationsfilter List of violations "Id" = quality rule URI#component URI, separated by comma, default "Empty" (All)   
- Display the code sniplets ? -displaysource true/false, default false.  
- Create exclusion request for the selected violations that are not already in an exclusion request ? -createexclusions true/false, default false  
- Create action plan item for the selected violations that are not already in an action plan ? -createactionplans true/false, default false  
- Action plan tag (new name for priority) : -actionplaninputtag, default = moderate  
- Comment for the action plan item/exclusion request created : -comment, default is 'Automated exclusion' for exclusion request, 'Automated action plan' for action plan  
- Log level -loglevel INFO/DEBUG, default INFO  
- Maximum number of rows -nbrows int value, default 1000000000 (has a high impact of performance, but is truncating the data)  

<a name="links"></a>
## Links
N/A
<a name="rules"></a>
## List of quality rules
N/A

<a name="knownIssues"></a>
# Known issues
- Some quality rules information contain unicode characters which is provokes the script to abort, except for a set unicode character already identified 

<a name="limitations"></a>
- Some data are not available before Engineering dashboard Rest API version 1.x and will be empty in this case
- The Full extraction and/or with the code sniplet can take up to several hours for an application containing 70k to 100k violations. This limitation cannot be removed because thoushands of rest API calls a done in this case. Depending of the level of detail you need, you should consider applied some filters (critical rules only, ...).
<a name="rn"></a>
# Release Notes
## Version 1.0.1
* Initial version published
